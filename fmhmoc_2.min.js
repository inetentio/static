const Spaces={init(){window.removeEventListener("DOMContentLoaded",Spaces.init),Spaces.load()},async load(){let e=document.querySelectorAll("[data-space]"),t=Array.from(e,e=>e.getAttribute("data-space")),a=document.querySelector('meta[name="pt"]').getAttribute("content"),r={spaces:t,url:window.location.pathname,blocked,pt:a},c={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)};try{let o=await fetch("/fmhmoc",c),l=await o.json();Spaces.load_done(l)}catch(s){console.error("Error loading data:",s)}},load_done(e){Spaces.list=e.spaces;let t=e.show;t.forEach(e=>{let t=document.querySelector(`[data-space="${e}"]`);t&&Spaces.insert_html(t)});let a=document.querySelectorAll("[data-space]"),r=Array.from(a).filter(t=>{let a=t.getAttribute("data-space");return!!e.spaces.hasOwnProperty(a)||(t.remove(),!1)});Spaces.check_visible(r)},log_click(e){let t=e.target.closest("[data-fm]");t&&Spaces.log(t,"click")},async log(e,t){let a=document.querySelector('meta[name="pt"]').getAttribute("content"),r={a:t,s:e.getAttribute("data-fm"),pt:a},c={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)};try{let o=await fetch("/fmhmocs",c);await o.json()}catch(l){console.error("Error logging data:",l)}},insert_html(e){let t=e.getAttribute("data-space"),a=Spaces.list[t];if(a){e.removeAttribute("data-space");let r=document.createElement("div");r.innerHTML=a;let c=r.getElementsByTagName("script");for(Array.from(c).forEach(t=>{let a=t.getAttribute("src");if(a){let r=document.createElement("script");r.src=a,e.appendChild(r)}else{let c=document.createElement("script");c.text=t.textContent,e.appendChild(c)}});r.firstChild;)e.appendChild(r.firstChild);let o=e.querySelector("[data-fm]");o&&Spaces.log(o,"show");let l=e.querySelectorAll("[data-v]");Array.from(l).forEach(e=>{Spaces.check_displayed(e),e.addEventListener("click",Spaces.log_click)})}},check_visible(e){let t=(e,t)=>{e.forEach(e=>{e.isIntersecting&&(Spaces.insert_html(e.target),t.unobserve(e.target))})},a=new IntersectionObserver(t,{rootMargin:"150px 0px"});e.forEach(e=>{a.observe(e)})},check_displayed(e){let t=(e,t)=>{e.forEach(e=>{e.isIntersecting&&(e.target.removeAttribute("data-v"),Spaces.log(e.target,"displayed"),t.unobserve(e.target))})},a=new IntersectionObserver(t,{rootMargin:"0px 0px"});a.observe(e)}};window.addEventListener("DOMContentLoaded",Spaces.init);